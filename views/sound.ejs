<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Sound Detection</title>
  </head>
  <body>
    <input type="file" id="videoInput" accept="video/*">
    <p>Upload a video file and sound will be analyzed.</p>
    <p id="resultMessage" style="display: none; color: green;"></p>
    
    <script>
      document.getElementById('videoInput').addEventListener('change', handleFileUpload);
  
      async function handleFileUpload(event) {
        const file = event.target.files[0];
        
        if (!file) {
          return;
        }
  
        const videoElement = document.createElement('video');
        videoElement.src = URL.createObjectURL(file);

        const audioContext = new (window.AudioContext || window.webkitAudioContext)();
        const sourceNode = audioContext.createMediaElementSource(videoElement);
      
        const analyser = audioContext.createAnalyser();
        sourceNode.connect(analyser);
        analyser.connect(audioContext.destination);
      
        analyser.fftSize = 256;
        const dataArray = new Uint8Array(analyser.frequencyBinCount);
      
        let soundThreshold = 30; // Adjust this threshold value as needed
      
        const checkSoundThreshold = () => {
            analyser.getByteFrequencyData(dataArray);
        
            const average = dataArray.reduce((acc, val) => acc + val, 0) / dataArray.length;
        
            if (average > soundThreshold) {
                resultMessage.textContent = "소리가 있는 영상입니다.";
            } else {
                resultMessage.textContent = "소리가 없는 영상입니다.";
            }
        
            resultMessage.style.display = "block";
        
            requestAnimationFrame(checkSoundThreshold);
        };
      
        videoElement.addEventListener('canplaythrough', () => {
            videoElement.play();
            checkSoundThreshold();
        });
    }
  </script>
</body>
</html>
